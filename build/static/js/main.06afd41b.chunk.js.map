{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","target","rel","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","errorGif","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","item","_updateCharacter","getCharacter","id","charObj","name","description","homepage","urls","wiki","thumbnail","path","extension","comics","items","RandomChar","state","char","loading","error","marvelService","onCharLoaded","setState","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgClass","includes","CharList","chars","newCharsLoading","charEnded","charRefs","counter","scrollHandler","baseLoaded","newCharsLoaded","window","scrollY","document","documentElement","clientHeight","scrollHeight","onReqestChars","onCharsLoading","onCharsLoaded","newChars","ended","length","arrRefs","setRef","elem","push","onFocusItem","forEach","classList","remove","add","createCharElemets","arr","elems","i","tabIndex","ref","props","onCharSelected","onKeyDown","e","key","onItemSelected","addEventListener","removeEventListener","charsElems","disabled","Skeleton","CharInfo","charID","onCharLoading","prevProps","skeleton","thumbnailStyle","comicsList","slice","ErrorBoundary","errorInfo","children","App","selectedChar","myRef","React","createRef","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.06afd41b.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a target='_blank' rel=\"noreferrer\" href=\"https://www.marvel.com\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a target='_blank' rel=\"noreferrer\" href=\"https://www.marvel.com/characters\">Characters</a></li>\n                    /\n                    <li><a target='_blank' rel=\"noreferrer\" href=\"http://marvel.com/comics\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import './errorMessage.scss';\r\nimport errorGif from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img className='errorImg' src={errorGif} alt=\"error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;\r\n","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=b27ff1186765ac40b196ef89a8017415';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if(!res.ok) {\r\n            throw new Error(`can't fetch ${url} status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return await res.data.results.map(item => this._updateCharacter(item));\r\n    }   \r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`); // большой объект который получаем\r\n        return this._updateCharacter(res.data.results[0]); // передаем в метод для формирования необходимого нам объекта\r\n    }\r\n\r\n    _updateCharacter = (charObj) => {\r\n        return {\r\n            id: charObj.id,\r\n            name: charObj.name,\r\n            description: charObj.description ,\r\n            homepage: charObj.urls[0].url,\r\n            wiki: charObj.urls[1].url,\r\n            thumbnail: charObj.thumbnail.path + '.' + charObj.thumbnail.extension, // маленькая картинка\r\n            comics: charObj.comics.items\r\n        }\r\n    }\r\n}   \r\n\r\nexport default MarvelService;\r\n  ","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }  \n    \n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onError = () => {\n        this.setState({error: true, loading: false})\n    }\n\n    updateChar = () => {    \n        this.setState({error: false, loading: true}); \n        // min id     max id   + min значение id\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000); // генерация id по мин и макс id\n        this.marvelService.getCharacter(id)\n        .then(this.onCharLoaded)\n        .catch(this.onError);\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(error || loading) ? <View char={char}/> : null;\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, homepage, wiki, thumbnail} = char;\n    const imgClass = thumbnail.includes('image_not_available') ? \"randomchar__img randomchar__img_contain\" : \"randomchar__img\"\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className={imgClass}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description || 'The description is unavalable at the moment'}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default RandomChar;","import { Component } from 'react';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport './charList.scss';\r\n\r\n\r\nclass CharList extends Component {\r\n\r\n    state = {\r\n        chars: [],\r\n        loading: true,\r\n        error: false,\r\n        newCharsLoading: false,\r\n        offset: 210,\r\n        charEnded: false,\r\n        charRefs: [],\r\n        counter: 0\r\n    }\r\n\r\n    marvelService = new MarvelService(); \r\n\r\n    componentDidMount() {\r\n        this.onReqestChars();\r\n        document.addEventListener('scroll', this.scrollHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('scroll', this.scrollHandler);\r\n    }\r\n\r\n    scrollHandler = () => {\r\n        const baseLoaded = this.state.loading === false;\r\n        const newCharsLoaded = this.state.newCharsLoading === false;\r\n\r\n        if(window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1 && baseLoaded & newCharsLoaded) {\r\n            this.onReqestChars(this.state.offset);\r\n        } \r\n    }\r\n\r\n    onReqestChars = (offset) => {\r\n        this.onCharsLoading();\r\n        this.marvelService.getAllCharacters(offset)\r\n            .then(this.onCharsLoaded)\r\n            .catch(this.onError) \r\n    }\r\n\r\n    onCharsLoading = () => {\r\n        this.setState({newCharsLoading: true})\r\n    }\r\n\r\n    onCharsLoaded = (newChars) => {\r\n        let ended = false\r\n        if(newChars.length < 9) {\r\n            ended = true; \r\n        }\r\n        this.setState(({chars, offset}) => ({\r\n            chars: [...chars, ...newChars], \r\n            loading: false,\r\n            newCharsLoading: false,\r\n            offset: offset + 9,\r\n            charEnded: ended\r\n        }));\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({error: true, loading: false})\r\n    }\r\n\r\n    arrRefs = [];\r\n\r\n    setRef = (elem) => {\r\n        this.arrRefs.push(elem);\r\n    }\r\n\r\n    onFocusItem = (id) => {\r\n        this.arrRefs.forEach(item => {\r\n           item.classList.remove('char__item_selected');\r\n        })\r\n        this.arrRefs[id].classList.add('char__item_selected');\r\n    }\r\n\r\n    createCharElemets = (arr) => {\r\n        const elems = arr.map((char, i) => {\r\n            let imgClass = char.thumbnail.includes('image_not_available') ? 'contain' : null;\r\n            \r\n            return (\r\n                <li className=\"char__item\"\r\n                    tabIndex={0}\r\n                    ref={this.setRef}\r\n                    onClick={() => {\r\n                        this.props.onCharSelected(char.id); \r\n                        this.onFocusItem(i);\r\n                    }}\r\n                    key={char.id}\r\n                    onKeyDown={(e) => {\r\n                        if(e.key === 'Enter') {\r\n                            this.props.onCharSelected(e.target.id);\r\n                            this.onItemSelected(e)\r\n                        }\r\n                    }}>\r\n                    <img className={imgClass} src={char.thumbnail} alt={char.name}/>\r\n                    <div className=\"char__name\">{char.name}</div>\r\n                    \r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                 {elems}\r\n             </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        const {error, loading, chars, newCharsLoading, offset, charEnded} = this.state;\r\n        const charsElems = this.createCharElemets(chars);\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !loading || !error  ? charsElems : null;\r\n\r\n        return (\r\n            <div className=\"char__list\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <button \r\n                    className=\"button button__main button__long\"\r\n                    onClick={() => this.onReqestChars(offset)}\r\n                    style={{'display': charEnded ? 'none' : 'block'}}\r\n                    disabled={newCharsLoading}>\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport Skeleton from '../skeleton/Skeleton';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\n\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.charID !== this.props.charID) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charID} = this.props;\n        if(!charID) {\n            return;\n        }\n\n        this.onCharLoading(); \n        this.marvelService\n            .getCharacter(charID)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoading = () => {\n        this.setState({loading: true})\n    }\n    \n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onError = () => {\n        this.setState({loading: false, error: true})\n    }\n\n    render() {\n        const {loading, char, error} = this.state;\n\n        const skeleton = !char && !loading && !error ? <Skeleton/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const content = !(loading || error) && char ? <View char={char}/> : null;\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {spinner}\n                {errorMessage}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, thumbnail, wiki, homepage, description, comics} = char;\n    const thumbnailStyle = thumbnail.includes('image_not_available') ? {'objectFit': 'unset'} : null;\n    const comicsList = comics?.slice(0, 10).map((comics, i) => {\n        return (\n            <li className=\"char__comics-item\" key={i}>\n                    {comics.name}\n            </li>\n        )\n    })\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} style={thumbnailStyle} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"char__descr\">\n                {description || 'Description temporary is unavalable'}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comicsList || 'There is no comics with this character'}\n            </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: true\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import React, { Component } from \"react/cjs/react.production.min\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null,\n    }\n\n    myRef = React.createRef();\n\n    onCharSelected = (id) => {\n        this.setState({selectedChar: id})\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charID={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n \nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n// import MarvelService from './services/MarvelService';\n\nimport './style/style.scss';\n\n// let marvelService = new MarvelService();\n// marvelService.getCharacter(Math.floor(Math.random() * (1011400 - 1011000) + 1011000)).then(res => console.log(res));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}